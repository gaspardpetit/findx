name: Docker

on:
  schedule:
    - cron: '18 8 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        variant:
          - name: cli
            suffix: ""
            dockerfile: deploy/Dockerfile.bundle

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute version metadata
        id: meta
        shell: bash
        env:
          UPDATE_CARGO_TOML: "1"
        run: .github/scripts/version.sh

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata ( ${{ matrix.variant.name }} )
        id: dmeta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.variant.suffix }}
          tags: |
            type=raw,value=sha-${{ steps.meta.outputs.sha }}
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=desc-${{ steps.meta.outputs.describe }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ github.ref_name }},enable=${{ steps.meta.outputs.is_clean_release == 'true' }}
            type=raw,value=v${{ steps.meta.outputs.major }}.${{ steps.meta.outputs.minor }},enable=${{ steps.meta.outputs.is_clean_release == 'true' }}
            type=raw,value=v${{ steps.meta.outputs.major }},enable=${{ steps.meta.outputs.is_clean_release == 'true' }}
            type=raw,value=latest,enable=${{ steps.meta.outputs.is_clean_release == 'true' }}

      - name: Build and push Docker image ( ${{ matrix.variant.name }} )
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.variant.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.dmeta.outputs.tags }}
          labels: ${{ steps.dmeta.outputs.labels }}
          platforms: ${{ startsWith(github.ref, 'refs/tags/') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            FINDX_VERSION=${{ steps.meta.outputs.version }}


      - name: Sign the published Docker image ( ${{ matrix.variant.name }} )
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.dmeta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
